// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// SAX_fast
NumericVector SAX_fast(NumericVector x, NumericVector limits);
RcppExport SEXP _FastTSDistances_SAX_fast(SEXP xSEXP, SEXP limitsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type limits(limitsSEXP);
    rcpp_result_gen = Rcpp::wrap(SAX_fast(x, limits));
    return rcpp_result_gen;
END_RCPP
}
// PAA_fast
NumericVector PAA_fast(NumericVector x, int windowCount);
RcppExport SEXP _FastTSDistances_PAA_fast(SEXP xSEXP, SEXP windowCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    rcpp_result_gen = Rcpp::wrap(PAA_fast(x, windowCount));
    return rcpp_result_gen;
END_RCPP
}
// PMaxAA_fast
NumericVector PMaxAA_fast(NumericVector x, int windowCount);
RcppExport SEXP _FastTSDistances_PMaxAA_fast(SEXP xSEXP, SEXP windowCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    rcpp_result_gen = Rcpp::wrap(PMaxAA_fast(x, windowCount));
    return rcpp_result_gen;
END_RCPP
}
// PMedAA_fast
NumericVector PMedAA_fast(NumericVector x, int windowCount);
RcppExport SEXP _FastTSDistances_PMedAA_fast(SEXP xSEXP, SEXP windowCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    rcpp_result_gen = Rcpp::wrap(PMedAA_fast(x, windowCount));
    return rcpp_result_gen;
END_RCPP
}
// PMinAA_fast
NumericVector PMinAA_fast(NumericVector x, int windowCount);
RcppExport SEXP _FastTSDistances_PMinAA_fast(SEXP xSEXP, SEXP windowCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    rcpp_result_gen = Rcpp::wrap(PMinAA_fast(x, windowCount));
    return rcpp_result_gen;
END_RCPP
}
// PSDAA_fast
NumericVector PSDAA_fast(NumericVector x, int windowCount, bool sample);
RcppExport SEXP _FastTSDistances_PSDAA_fast(SEXP xSEXP, SEXP windowCountSEXP, SEXP sampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    Rcpp::traits::input_parameter< bool >::type sample(sampleSEXP);
    rcpp_result_gen = Rcpp::wrap(PSDAA_fast(x, windowCount, sample));
    return rcpp_result_gen;
END_RCPP
}
// subVectorMean_fast
double subVectorMean_fast(NumericVector x, double startIdx, double endIdx);
RcppExport SEXP _FastTSDistances_subVectorMean_fast(SEXP xSEXP, SEXP startIdxSEXP, SEXP endIdxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type startIdx(startIdxSEXP);
    Rcpp::traits::input_parameter< double >::type endIdx(endIdxSEXP);
    rcpp_result_gen = Rcpp::wrap(subVectorMean_fast(x, startIdx, endIdx));
    return rcpp_result_gen;
END_RCPP
}
// PSkewAA_fast
NumericVector PSkewAA_fast(NumericVector x, int windowCount, double nanReplace);
RcppExport SEXP _FastTSDistances_PSkewAA_fast(SEXP xSEXP, SEXP windowCountSEXP, SEXP nanReplaceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    Rcpp::traits::input_parameter< double >::type nanReplace(nanReplaceSEXP);
    rcpp_result_gen = Rcpp::wrap(PSkewAA_fast(x, windowCount, nanReplace));
    return rcpp_result_gen;
END_RCPP
}
// PKurtAA_fast
NumericVector PKurtAA_fast(NumericVector x, int windowCount, double nanReplace, bool excess);
RcppExport SEXP _FastTSDistances_PKurtAA_fast(SEXP xSEXP, SEXP windowCountSEXP, SEXP nanReplaceSEXP, SEXP excessSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowCount(windowCountSEXP);
    Rcpp::traits::input_parameter< double >::type nanReplace(nanReplaceSEXP);
    Rcpp::traits::input_parameter< bool >::type excess(excessSEXP);
    rcpp_result_gen = Rcpp::wrap(PKurtAA_fast(x, windowCount, nanReplace, excess));
    return rcpp_result_gen;
END_RCPP
}
// averageTimeSeries_fast
NumericVector averageTimeSeries_fast(List tsList, NumericVector weights);
RcppExport SEXP _FastTSDistances_averageTimeSeries_fast(SEXP tsListSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type tsList(tsListSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(averageTimeSeries_fast(tsList, weights));
    return rcpp_result_gen;
END_RCPP
}
// averageTimeSeriesMult_fast
NumericMatrix averageTimeSeriesMult_fast(List tsList, NumericVector weights);
RcppExport SEXP _FastTSDistances_averageTimeSeriesMult_fast(SEXP tsListSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type tsList(tsListSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(averageTimeSeriesMult_fast(tsList, weights));
    return rcpp_result_gen;
END_RCPP
}
// l2CompCorFactor_fast
double l2CompCorFactor_fast(NumericVector x, NumericVector y);
RcppExport SEXP _FastTSDistances_l2CompCorFactor_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(l2CompCorFactor_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// l2CompCorFactorMult_fast
double l2CompCorFactorMult_fast(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _FastTSDistances_l2CompCorFactorMult_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(l2CompCorFactorMult_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// l2Norm_fast
double l2Norm_fast(NumericVector x);
RcppExport SEXP _FastTSDistances_l2Norm_fast(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(l2Norm_fast(x));
    return rcpp_result_gen;
END_RCPP
}
// tempCor_fast
double tempCor_fast(NumericVector x, NumericVector y);
RcppExport SEXP _FastTSDistances_tempCor_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(tempCor_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// cortFactor_fast
double cortFactor_fast(NumericVector x, NumericVector y, double k);
RcppExport SEXP _FastTSDistances_cortFactor_fast(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(cortFactor_fast(x, y, k));
    return rcpp_result_gen;
END_RCPP
}
// cortFactorMult_fast
double cortFactorMult_fast(NumericMatrix x, NumericMatrix y, double k);
RcppExport SEXP _FastTSDistances_cortFactorMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(cortFactorMult_fast(x, y, k));
    return rcpp_result_gen;
END_RCPP
}
// vectorCrossDistMat
NumericMatrix vectorCrossDistMat(NumericVector x, NumericVector y);
RcppExport SEXP _FastTSDistances_vectorCrossDistMat(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(vectorCrossDistMat(x, y));
    return rcpp_result_gen;
END_RCPP
}
// corDist_fast
double corDist_fast(NumericVector x, NumericVector y, double beta);
RcppExport SEXP _FastTSDistances_corDist_fast(SEXP xSEXP, SEXP ySEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(corDist_fast(x, y, beta));
    return rcpp_result_gen;
END_RCPP
}
// EDRDist_fast
double EDRDist_fast(NumericVector x, NumericVector y, double epsilon, bool normalize);
RcppExport SEXP _FastTSDistances_EDRDist_fast(SEXP xSEXP, SEXP ySEXP, SEXP epsilonSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(EDRDist_fast(x, y, epsilon, normalize));
    return rcpp_result_gen;
END_RCPP
}
// EDRDistMult_fast
double EDRDistMult_fast(NumericMatrix x, NumericMatrix y, double epsilon, bool normalize);
RcppExport SEXP _FastTSDistances_EDRDistMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP epsilonSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(EDRDistMult_fast(x, y, epsilon, normalize));
    return rcpp_result_gen;
END_RCPP
}
// EDRDistSakoeChiba_fast
double EDRDistSakoeChiba_fast(NumericVector x, NumericVector y, double epsilon, int windowSize);
RcppExport SEXP _FastTSDistances_EDRDistSakoeChiba_fast(SEXP xSEXP, SEXP ySEXP, SEXP epsilonSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(EDRDistSakoeChiba_fast(x, y, epsilon, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// EDRDistSakoeChibaMult_fast
double EDRDistSakoeChibaMult_fast(NumericMatrix x, NumericMatrix y, double epsilon, int windowSize);
RcppExport SEXP _FastTSDistances_EDRDistSakoeChibaMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP epsilonSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(EDRDistSakoeChibaMult_fast(x, y, epsilon, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// ERPDist
double ERPDist(NumericVector x, NumericVector y, double gapValue);
RcppExport SEXP _FastTSDistances_ERPDist(SEXP xSEXP, SEXP ySEXP, SEXP gapValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gapValue(gapValueSEXP);
    rcpp_result_gen = Rcpp::wrap(ERPDist(x, y, gapValue));
    return rcpp_result_gen;
END_RCPP
}
// ERPDist_fast
double ERPDist_fast(NumericVector x, NumericVector y, double gapValue, bool normalize);
RcppExport SEXP _FastTSDistances_ERPDist_fast(SEXP xSEXP, SEXP ySEXP, SEXP gapValueSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gapValue(gapValueSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(ERPDist_fast(x, y, gapValue, normalize));
    return rcpp_result_gen;
END_RCPP
}
// ERPDistMult_fast
double ERPDistMult_fast(NumericMatrix x, NumericMatrix y, double gapValue, bool normalize);
RcppExport SEXP _FastTSDistances_ERPDistMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP gapValueSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gapValue(gapValueSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(ERPDistMult_fast(x, y, gapValue, normalize));
    return rcpp_result_gen;
END_RCPP
}
// ERPDistSakoeChiba
double ERPDistSakoeChiba(NumericVector x, NumericVector y, double gapValue, int windowSize);
RcppExport SEXP _FastTSDistances_ERPDistSakoeChiba(SEXP xSEXP, SEXP ySEXP, SEXP gapValueSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gapValue(gapValueSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(ERPDistSakoeChiba(x, y, gapValue, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// ERPDistSakoeChiba_fast
double ERPDistSakoeChiba_fast(NumericVector x, NumericVector y, double gapValue, int windowSize);
RcppExport SEXP _FastTSDistances_ERPDistSakoeChiba_fast(SEXP xSEXP, SEXP ySEXP, SEXP gapValueSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gapValue(gapValueSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(ERPDistSakoeChiba_fast(x, y, gapValue, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// ERPDistSakoeChibaMult_fast
double ERPDistSakoeChibaMult_fast(NumericMatrix x, NumericMatrix y, double gapValue, int windowSize);
RcppExport SEXP _FastTSDistances_ERPDistSakoeChibaMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP gapValueSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type gapValue(gapValueSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(ERPDistSakoeChibaMult_fast(x, y, gapValue, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// DTWDist_fast
double DTWDist_fast(NumericVector x, NumericVector y, bool cid, double cortK, bool normalize);
RcppExport SEXP _FastTSDistances_DTWDist_fast(SEXP xSEXP, SEXP ySEXP, SEXP cidSEXP, SEXP cortKSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type cid(cidSEXP);
    Rcpp::traits::input_parameter< double >::type cortK(cortKSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(DTWDist_fast(x, y, cid, cortK, normalize));
    return rcpp_result_gen;
END_RCPP
}
// DTWDistMult_fast
double DTWDistMult_fast(NumericMatrix x, NumericMatrix y, bool cid, double cortK, bool normalize);
RcppExport SEXP _FastTSDistances_DTWDistMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP cidSEXP, SEXP cortKSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type cid(cidSEXP);
    Rcpp::traits::input_parameter< double >::type cortK(cortKSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(DTWDistMult_fast(x, y, cid, cortK, normalize));
    return rcpp_result_gen;
END_RCPP
}
// DTWDistSakoeChiba_fast
double DTWDistSakoeChiba_fast(NumericVector x, NumericVector y, double windowSize);
RcppExport SEXP _FastTSDistances_DTWDistSakoeChiba_fast(SEXP xSEXP, SEXP ySEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(DTWDistSakoeChiba_fast(x, y, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// DTWDistSakoeChibaMult_fast
double DTWDistSakoeChibaMult_fast(NumericMatrix x, NumericMatrix y, double windowSize);
RcppExport SEXP _FastTSDistances_DTWDistSakoeChibaMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(DTWDistSakoeChibaMult_fast(x, y, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// l1Dist_fast
double l1Dist_fast(NumericVector x, NumericVector y);
RcppExport SEXP _FastTSDistances_l1Dist_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(l1Dist_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// l1DistMult_fast
double l1DistMult_fast(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _FastTSDistances_l1DistMult_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(l1DistMult_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// l2Dist_fast
double l2Dist_fast(NumericVector x, NumericVector y, bool cid, double cortK);
RcppExport SEXP _FastTSDistances_l2Dist_fast(SEXP xSEXP, SEXP ySEXP, SEXP cidSEXP, SEXP cortKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type cid(cidSEXP);
    Rcpp::traits::input_parameter< double >::type cortK(cortKSEXP);
    rcpp_result_gen = Rcpp::wrap(l2Dist_fast(x, y, cid, cortK));
    return rcpp_result_gen;
END_RCPP
}
// l2DistMult_fast
double l2DistMult_fast(NumericMatrix x, NumericMatrix y, bool cid, double cortK);
RcppExport SEXP _FastTSDistances_l2DistMult_fast(SEXP xSEXP, SEXP ySEXP, SEXP cidSEXP, SEXP cortKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< bool >::type cid(cidSEXP);
    Rcpp::traits::input_parameter< double >::type cortK(cortKSEXP);
    rcpp_result_gen = Rcpp::wrap(l2DistMult_fast(x, y, cid, cortK));
    return rcpp_result_gen;
END_RCPP
}
// lmaxDist_fast
double lmaxDist_fast(NumericVector x, NumericVector y);
RcppExport SEXP _FastTSDistances_lmaxDist_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lmaxDist_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// lmaxDistMult_fast
double lmaxDistMult_fast(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _FastTSDistances_lmaxDistMult_fast(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(lmaxDistMult_fast(x, y));
    return rcpp_result_gen;
END_RCPP
}
// clusterEntropy_fast
double clusterEntropy_fast(IntegerVector assignments, bool normalize);
RcppExport SEXP _FastTSDistances_clusterEntropy_fast(SEXP assignmentsSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type assignments(assignmentsSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(clusterEntropy_fast(assignments, normalize));
    return rcpp_result_gen;
END_RCPP
}
// generalizedDB_fast
double generalizedDB_fast(NumericMatrix interClusterDistances, NumericVector intraClusterDistances);
RcppExport SEXP _FastTSDistances_generalizedDB_fast(SEXP interClusterDistancesSEXP, SEXP intraClusterDistancesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type interClusterDistances(interClusterDistancesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intraClusterDistances(intraClusterDistancesSEXP);
    rcpp_result_gen = Rcpp::wrap(generalizedDB_fast(interClusterDistances, intraClusterDistances));
    return rcpp_result_gen;
END_RCPP
}
// iGeneralizedDB_fast
double iGeneralizedDB_fast(NumericMatrix interClusterDistances, NumericVector intraClusterDistances);
RcppExport SEXP _FastTSDistances_iGeneralizedDB_fast(SEXP interClusterDistancesSEXP, SEXP intraClusterDistancesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type interClusterDistances(interClusterDistancesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intraClusterDistances(intraClusterDistancesSEXP);
    rcpp_result_gen = Rcpp::wrap(iGeneralizedDB_fast(interClusterDistances, intraClusterDistances));
    return rcpp_result_gen;
END_RCPP
}
// generalizedDunn_fast
double generalizedDunn_fast(NumericMatrix interClusterDistances, NumericVector intraClusterDistances);
RcppExport SEXP _FastTSDistances_generalizedDunn_fast(SEXP interClusterDistancesSEXP, SEXP intraClusterDistancesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type interClusterDistances(interClusterDistancesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intraClusterDistances(intraClusterDistancesSEXP);
    rcpp_result_gen = Rcpp::wrap(generalizedDunn_fast(interClusterDistances, intraClusterDistances));
    return rcpp_result_gen;
END_RCPP
}
// conditionalEntropy_fast
double conditionalEntropy_fast(IntegerVector assignments, IntegerVector groundTruth, bool normalizeAndInvert);
RcppExport SEXP _FastTSDistances_conditionalEntropy_fast(SEXP assignmentsSEXP, SEXP groundTruthSEXP, SEXP normalizeAndInvertSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type assignments(assignmentsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type groundTruth(groundTruthSEXP);
    Rcpp::traits::input_parameter< bool >::type normalizeAndInvert(normalizeAndInvertSEXP);
    rcpp_result_gen = Rcpp::wrap(conditionalEntropy_fast(assignments, groundTruth, normalizeAndInvert));
    return rcpp_result_gen;
END_RCPP
}
// pairCVIParameters_fast
NumericVector pairCVIParameters_fast(IntegerVector assignments1, IntegerVector assignments2);
RcppExport SEXP _FastTSDistances_pairCVIParameters_fast(SEXP assignments1SEXP, SEXP assignments2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type assignments1(assignments1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type assignments2(assignments2SEXP);
    rcpp_result_gen = Rcpp::wrap(pairCVIParameters_fast(assignments1, assignments2));
    return rcpp_result_gen;
END_RCPP
}
// randIndex_fast
double randIndex_fast(NumericVector pairCVIParams, bool normalize);
RcppExport SEXP _FastTSDistances_randIndex_fast(SEXP pairCVIParamsSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pairCVIParams(pairCVIParamsSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(randIndex_fast(pairCVIParams, normalize));
    return rcpp_result_gen;
END_RCPP
}
// fowlkesMallows_fast
double fowlkesMallows_fast(NumericVector pairCVIParams, bool normalize);
RcppExport SEXP _FastTSDistances_fowlkesMallows_fast(SEXP pairCVIParamsSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pairCVIParams(pairCVIParamsSEXP);
    Rcpp::traits::input_parameter< bool >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(fowlkesMallows_fast(pairCVIParams, normalize));
    return rcpp_result_gen;
END_RCPP
}
// phi_fast
double phi_fast(NumericVector pairCVIParams);
RcppExport SEXP _FastTSDistances_phi_fast(SEXP pairCVIParamsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pairCVIParams(pairCVIParamsSEXP);
    rcpp_result_gen = Rcpp::wrap(phi_fast(pairCVIParams));
    return rcpp_result_gen;
END_RCPP
}
// purity_fast
double purity_fast(IntegerVector assignments, IntegerVector groundTruth);
RcppExport SEXP _FastTSDistances_purity_fast(SEXP assignmentsSEXP, SEXP groundTruthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type assignments(assignmentsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type groundTruth(groundTruthSEXP);
    rcpp_result_gen = Rcpp::wrap(purity_fast(assignments, groundTruth));
    return rcpp_result_gen;
END_RCPP
}
// vanDongen_fast
double vanDongen_fast(IntegerVector assignments1, IntegerVector assignments2, bool normalizeAndInvert);
RcppExport SEXP _FastTSDistances_vanDongen_fast(SEXP assignments1SEXP, SEXP assignments2SEXP, SEXP normalizeAndInvertSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type assignments1(assignments1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type assignments2(assignments2SEXP);
    Rcpp::traits::input_parameter< bool >::type normalizeAndInvert(normalizeAndInvertSEXP);
    rcpp_result_gen = Rcpp::wrap(vanDongen_fast(assignments1, assignments2, normalizeAndInvert));
    return rcpp_result_gen;
END_RCPP
}
// VI_fast
double VI_fast(IntegerVector assignments1, IntegerVector assignments2, bool normalizeAndInvert);
RcppExport SEXP _FastTSDistances_VI_fast(SEXP assignments1SEXP, SEXP assignments2SEXP, SEXP normalizeAndInvertSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type assignments1(assignments1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type assignments2(assignments2SEXP);
    Rcpp::traits::input_parameter< bool >::type normalizeAndInvert(normalizeAndInvertSEXP);
    rcpp_result_gen = Rcpp::wrap(VI_fast(assignments1, assignments2, normalizeAndInvert));
    return rcpp_result_gen;
END_RCPP
}
