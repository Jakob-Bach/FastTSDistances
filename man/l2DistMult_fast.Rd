% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{l2DistMult_fast}
\alias{l2DistMult_fast}
\title{(Fast) Multi-variate L2 Distance}
\usage{
l2DistMult_fast(x, y, cid = FALSE, cortK = -1)
}
\arguments{
\item{x}{1st numeric matrix/multi-variate time series.}

\item{y}{2nd numeric matrix/multi-variate time series.}

\item{cid}{Should the distance be made complexity invariant
(\code{\link{l2CompCorFactorMult_fast}})?}

\item{cortK}{Should the temporal behavior (correlation) of the time series'
diff vectors be considered (\code{\link{cortFactorMult_fast}})? A factor smaller
than 0 means no, higher factors will be used as parameter \code{k} in the
temporal correlation scaling function.}
}
\value{
The distance as double.
}
\description{
Computes the standard Euclidean distance between multi-variate time series
(according to Kotsakos, Trajcevski, Gunopulos and Aggarwal (2014)) with a
fast C++ implementation.
}
\section{References}{


Kotsakos, D., Trajcevski, G., Gunopulos, D. & Aggarwal, C. C. (2014). Time-series
data clustering. In C. C. Aggarwal & C. K. Reddy (Eds.), \emph{Data clustering :
Algorithms and applications} (pp. 357â€“380). Chapman & Hall/CRC data mining and
knowledge discovery series. Boca Raton: CRC Press.
}

\seealso{
Other L_p distances: \code{\link{l1DistMult_fast}},
  \code{\link{l1Dist_fast}}, \code{\link{l2Dist_fast}},
  \code{\link{l2Dist}}, \code{\link{l2Norm_fast}},
  \code{\link{lmaxDistMult_fast}},
  \code{\link{lmaxDist_fast}}
}
