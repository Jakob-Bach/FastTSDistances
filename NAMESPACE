# Generated by roxygen2: do not edit by hand

export(DTWDistMult_fast)
export(DTWDistSakoeChibaMult_fast)
export(DTWDistSakoeChiba_fast)
export(DTWDist_fast)
export(EDRDistMult_fast)
export(EDRDistSakoeChibaMult_fast)
export(EDRDistSakoeChiba_fast)
export(EDRDist_fast)
export(ERPDist)
export(ERPDistMult_fast)
export(ERPDistSakoeChiba)
export(ERPDistSakoeChibaMult_fast)
export(ERPDistSakoeChiba_fast)
export(ERPDist_fast)
export(PAA_fast)
export(PKurtAA_fast)
export(PMaxAA_fast)
export(PMedAA_fast)
export(PMinAA_fast)
export(PSDAA_fast)
export(PSkewAA_fast)
export(SAXLimitsDataAdaptive)
export(SAXLimitsOriginal)
export(SAX_fast)
export(VI_fast)
export(averageTimeSeriesList)
export(averageTimeSeriesMult_fast)
export(averageTimeSeries_fast)
export(clusterEntropy_fast)
export(compDist)
export(compDistTSList)
export(conditionalEntropy_fast)
export(corDist_fast)
export(cortFactorMult_fast)
export(cortFactor_fast)
export(crossCorNormalized)
export(fowlkesMallows_fast)
export(generalizedDB_fast)
export(generalizedDunn_fast)
export(iGeneralizedDB_fast)
export(l1DistMult_fast)
export(l1Dist_fast)
export(l2CompCorFactorMult_fast)
export(l2CompCorFactor_fast)
export(l2Dist)
export(l2DistMult_fast)
export(l2Dist_fast)
export(l2Norm_fast)
export(lmaxDistMult_fast)
export(lmaxDist_fast)
export(minMaxNormalize)
export(pairCVIParameters_fast)
export(pdcDistTSList)
export(pdcDistTSListMult)
export(pdcDistTwoTS)
export(pdcDistTwoTSMult)
export(pdcEntropyHeuristic)
export(pdcEntropyHeuristicMult)
export(phi_fast)
export(purity_fast)
export(randIndex_fast)
export(shapeBasedDistance)
export(tsCrossDistMat)
export(vanDongen_fast)
export(vectorCrossDistMat)
export(znormalize)
importFrom(Rcpp,sourceCpp)
importFrom(doParallel,registerDoParallel)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(parallel,makeCluster)
importFrom(parallel,stopCluster)
importFrom(pdc,codebook)
importFrom(pdc,symmetricAlphaDivergence)
importFrom(stats,convolve)
importFrom(stats,qnorm)
importFrom(stats,quantile)
importFrom(stats,sd)
useDynLib(FastTSDistances, .registration = TRUE)
